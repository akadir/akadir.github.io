{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/11/03-install_sonarqube_server/","result":{"data":{"site":{"siteMetadata":{"title":"akadir's blog"}},"markdownRemark":{"id":"e0345783-ede5-5b5f-8702-518e16b2a7a2","excerpt":"SonarQube is a popular static code analyze tool and in this post we will cover how to install SonarQube server on Ubuntu. As I already mentioned, SonarQube is…","html":"<p>SonarQube is a popular static code analyze tool and in this post we will cover how to install SonarQube server on Ubuntu.</p>\n<p>As I already mentioned, SonarQube is one of the most popular static code analyzer tool and it’s installation and usage is very simple. In this guide we will use PostgreSQL as database solution.</p>\n<h2>PostgresSQL Installation and Configuration</h2>\n<h3>Install PostgreSQL</h3>\n<p>Let’s start with database installation. PostgreSQL installation is also very simple, we can execute following commands to install postgres:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># Add PostgreSQL apt repository\necho &#39;deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main&#39; &gt;&gt; /etc/apt/sources.list.d/pgdg.list\n\n# Import the repository signing key, and update the package lists\nwget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - \n\n# Install PostgreSQL\nsudo apt-get update\nsudo apt-get install postgresql-10</code></pre></div>\n<h3>Change postgres user password and authentication type</h3>\n<p>After PostgreSQL installation we will connect PostgreSQL and create database with the name SonarQube. But before that, we should change PostgreSQL authentication type from IDENT to MD5. In order to do that, we should first change our user(we connected as root) to postgres and then connect to PostgreSQL: </p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">su - postgres psql</code></pre></div>\n<p>then change password with the </p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">\\password</code></pre></div>\n<p>command. This command prompt you a new password and confirmation inputs. After that you can quit from PostgreSQL with: </p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">\\q</code></pre></div>\n<p>After password change, we should check authentication type by looking at pg_hba.conf file as shown in below:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">cat /var/lib/pgsql/10/data/pg_hba.conf</code></pre></div>\n<p>This file’s content should have a part like below (the important part is md5 column):</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token comment\"># IPv4 local connections:</span>\n<span class=\"token attr-name\">host</span> <span class=\"token attr-value\">   all              all             127.0.0.1/32             md5</span>\n<span class=\"token comment\"># IPv6 local connections:</span>\n<span class=\"token attr-name\">host</span> <span class=\"token attr-value\">   all              all             ::1/128                  md5&lt;/pre></span></code></pre></div>\n<p>If the file contains configuration like below you should update to md5 instead.</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token comment\"># IPv4 local connections:</span>\n<span class=\"token attr-name\">host</span> <span class=\"token attr-value\">   all              all             127.0.0.1/32             ident</span>\n<span class=\"token comment\"># IPv6 local connections:</span>\n<span class=\"token attr-name\">host</span> <span class=\"token attr-value\">   all              all             ::1/128                  ident</span></code></pre></div>\n<h3>Create database for Sonarqube</h3>\n<p>To use PostgreSQL for database solution for SonarQube we should create sonarqube database using following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> sonarqube<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Create sonarqube User</h3>\n<p>The next step coming after postgres configuration is creating unix user for sonarqube. </p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">adduser sonarqube</code></pre></div>\n<p>This command will ask for password and then prompt to set new user informations. After typing desired inputs, our user will be created.</p>\n<p>After sonarqube user creation, let’s add our user into sudo group</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">usermod -aG sudo sonarqube</code></pre></div>\n<h2>Download &#x26; Configure SonarQube</h2>\n<p>Download latest version of sonarqube from <a href=\"https://www.sonarqube.org/downloads/\" target=\"_blank\">https://www.sonarqube.org/downloads/</a> and extract it to folder as you desire.</p>\n<p>Edit <code class=\"language-text\">$SONARQUBE-HOME/conf/sonar.properties</code> file to configure postgresql access.</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">sonar.jdbc.username</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">sonarqube</span>\n<span class=\"token attr-name\">sonar.jdbc.password</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">mypassword</span>\n<span class=\"token attr-name\">sonar.jdbc.url</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">jdbc:postgresql://localhost/sonarqube</span></code></pre></div>\n<p>And it is highly recommended to update Elasticsearch storage paths in the same file(<code class=\"language-text\">$SONARQUBE-HOME/conf/sonar.properties</code>).</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">sonar.path.data</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">/var/sonarqube/data</span>\n<span class=\"token attr-name\">sonar.path.temp</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">/var/sonarqube/temp</span></code></pre></div>\n<h3>Start SonarQube Server</h3>\n<p>Execute the following script to start the server:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$SONARQUBE-HOME/bin/sonar.sh start</code></pre></div>\n<p>Default port for sonarqube is 9000 and default System administrator credentials are admin/admin</p>\n<h3>Solution for elastic-search related vm.max<em>map</em>count error</h3>\n<p>After initial start of server first check if there is any error from log files stored in <code class=\"language-text\">$SONARQUBE-HOME/logs</code> directory. If you see the <code class=\"language-text\">max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</code> error you can resolve this by executing following command as root:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sysctl -w vm.max_map_count=262144</code></pre></div>\n<hr>\n<p>references:</p>\n<ul>\n<li><a href=\"http://yallalabs.com/linux/how-to-install-and-use-postgresql-10-on-ubuntu-16-04/\" target=\"_blank\">http://yallalabs.com/linux/how-to-install-and-use-postgresql-10-on-ubuntu-16-04/</a></li>\n<li><a href=\"https://www.liquidweb.com/kb/change-postgresql-authentication-method-from-ident-to-md5/\" target=\"_blank\">https://www.liquidweb.com/kb/change-postgresql-authentication-method-from-ident-to-md5/</a></li>\n<li><a href=\"https://www.guru99.com/postgresql-create-database.html\" target=\"_blank\">https://www.guru99.com/postgresql-create-database.html</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-ubuntu-quickstart\" target=\"_blank\">https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-ubuntu-quickstart</a></li>\n<li><a href=\"https://docs.sonarqube.org/latest/setup/install-server/\" target=\"_blank\">https://docs.sonarqube.org/latest/setup/install-server/</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html\" target=\"_blank\">https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html</a></li>\n</ul>","frontmatter":{"title":"Guide To Install SonarQube Server","date":"November 15, 2019","description":"SonarQube is a popular static code analyze tool and in this post we will cover how to install SonarQube server on Ubuntu."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019/11/03-install_sonarqube_server/","previous":{"fields":{"slug":"/2019/11/02-fix_no_pubkey_error_on_ubuntu/"},"frontmatter":{"title":"Fix GPG Error: Missing NO_PUBKEY error on Ubuntu"}},"next":{"fields":{"slug":"/2020/04/01-git-sparse-checkout/"},"frontmatter":{"title":"git sparse checkout"}}}}}